jvm
1.类加载
    类加载，连接，初始化在程序运行期间内完成
2.jvm结束生命周期
    system.exit();
    程序正常执行结束
    程序执行过程中遇到了异常或错误
    操作系统错误导致jvm终止
3.类加载
    1.查找并加载类的二进制
    2.连接：
        1.验证：确保加载类的正确性
        2.准备：为类的“    静态变量    ”分配内存，并将其初始化为默认值
        3.解析：把类中的符号引用转换为直接引用
    3.初始化：为类的静态变量赋予正确的初始化值
    4.类的使用
    5.卸载
4.java程序对类的使用方式2种
    主动使用（7种）
        1.创建类的实例
        2.访问某个类或接口的静态变量或对该静态变量赋值    getstatic  putstatic
        3.调用类的静态方法  invokestatic
        4.反射（class.forname）
        5.初始化一个类的子类
        6.java虚拟机启动时被标明为启动类的类
        7.jdk7开始提供的动态语言支持
        java.lang.invoke.MethodHandle实例的解析结果 ref_getstatic,ref_putstatic ,ref_invokestatic句柄对应的类没有初始化则初始化
    被动使用：除了主动使用的7中方法。其他使用被看作被动使用，都不会导致类的初始化
    所有java虚拟机实现必须在每个类或接口被java程序“    首次主动使用    ”时才初始化他们。
5.类加载将.class文件读入到内存放入运行时数据区的方法区内然在内存中创建一个java.lang.class对象，用来封装类在方法区内的数据结构
6.类的加载
    从本地系统直接加载
    通过网络下载.class文件
    从zip,jar等归档文件中加载
    从专有数据库中提取
    将java源文件动态编译为.class文件
